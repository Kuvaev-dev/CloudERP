<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SalaryIsAlreadyPaid" xml:space="preserve">
    <value>Salary Is Already Paid</value>
  </data>
  <data name="BalanceSheet" xml:space="preserve">
    <value>Balance Sheet</value>
  </data>
  <data name="NetIncome" xml:space="preserve">
    <value>Net Income</value>
  </data>
  <data name="TotalRevenue" xml:space="preserve">
    <value>Total Revenue</value>
  </data>
  <data name="TotalExpenses" xml:space="preserve">
    <value>Total Expenses</value>
  </data>
  <data name="ReminderFor" xml:space="preserve">
    <value>Reminder for</value>
  </data>
  <data name="ReminderForTask" xml:space="preserve">
    <value>Reminder for Task</value>
  </data>
  <data name="DueDate" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="MakeSureToCompleteTask" xml:space="preserve">
    <value>Make sure to complete task</value>
  </data>
  <data name="PurchaseInvoice" xml:space="preserve">
    <value>Purchase Invoice</value>
  </data>
  <data name="TotalBalance" xml:space="preserve">
    <value>Total Balance</value>
  </data>
  <data name="DebitAccountNotFound" xml:space="preserve">
    <value>Debit account not found.</value>
  </data>
  <data name="CreditAccountNotFound" xml:space="preserve">
    <value>Credit account not found.</value>
  </data>
  <data name="GeneralTransactionSucceed" xml:space="preserve">
    <value>General Transaction Succeed!</value>
  </data>
  <data name="UnexpectedErrorOccurred" xml:space="preserve">
    <value>Unexpected Error Occurred. Please Try Again!</value>
  </data>
  <data name="AccountSettingsForPurchaseNotFound" xml:space="preserve">
    <value>Account settings for Purchase not found.</value>
  </data>
  <data name="AccountSettingsForPurchasePaymentPendingNotFound" xml:space="preserve">
    <value>Account settings for Purchase Payment Pending not found.</value>
  </data>
  <data name="AccountSettingsForPurchasePaymentPaidNotFound" xml:space="preserve">
    <value>Account settings for Purchase Payment Paid not found.</value>
  </data>
  <data name="AccountSettingsForPurchasePaymentSuccessNotFound" xml:space="preserve">
    <value>Account settings for Purchase Payment Success not found.</value>
  </data>
  <data name="PurchaseSuccessWithPayment" xml:space="preserve">
    <value>Purchase Success with Payment.</value>
  </data>
  <data name="PurchaseSuccess" xml:space="preserve">
    <value>Purchase Success</value>
  </data>
  <data name="PurchaseFrom" xml:space="preserve">
    <value>Purchase From </value>
  </data>
  <data name="ReturnPurchaseTo" xml:space="preserve">
    <value>Return Purchase to </value>
  </data>
  <data name="ReturnPurchaseSuccess" xml:space="preserve">
    <value>Return Purchase Success</value>
  </data>
  <data name="AccountSettingsАForReturnPurchaseNotFound" xml:space="preserve">
    <value>Account settings for Return Purchase not found.</value>
  </data>
  <data name="AccountSettingsForPurchaseReturnPaymentPendingNotFound" xml:space="preserve">
    <value>Account settings for Purchase Return Payment Pending not found.</value>
  </data>
  <data name="ReturnPurchasePaymentIsPending" xml:space="preserve">
    <value>, Return Purchase Payment is Pending!</value>
  </data>
  <data name="ReturnPaymentFrom" xml:space="preserve">
    <value>Return Payment from </value>
  </data>
  <data name="AccountSettingsForPurchaseReturnPaymentSucceedNotFound" xml:space="preserve">
    <value>Account settings for Purchase Return Payment Succeed not found.</value>
  </data>
  <data name="ReturnPurchasePaymentIsSucceed" xml:space="preserve">
    <value>, Return Purchase Payment is Succeed!</value>
  </data>
  <data name="WithPayment" xml:space="preserve">
    <value> with Payment.</value>
  </data>
  <data name="ReturnPurchasePaymentIsPaid" xml:space="preserve">
    <value>Return Purchase Payment is Paid</value>
  </data>
  <data name="SalaryIsPending" xml:space="preserve">
    <value>Salary is Pending</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>, To </value>
  </data>
  <data name="AccountSettingsNotFoundForTheProvidedCompanyIDAndBranchID" xml:space="preserve">
    <value>Account settings not found for the provided CompanyID and BranchID.</value>
  </data>
  <data name="SalarySucceed" xml:space="preserve">
    <value>Salary Succeed </value>
  </data>
  <data name="SaleTo" xml:space="preserve">
    <value>Sale to </value>
  </data>
  <data name="AccountSettingsForSaleNotFound" xml:space="preserve">
    <value>Account settings for Sale not found</value>
  </data>
  <data name="AccountSettingsForSalePaymentPendingNotFound" xml:space="preserve">
    <value>Account settings for Sale Payment Pending not found.</value>
  </data>
  <data name="AccountSettingsForSalePaymentPaidNotFound" xml:space="preserve">
    <value>Account settings for Sale Payment Paid not found.</value>
  </data>
  <data name="AccountSettingsForSalePaymentSuccessNotFound" xml:space="preserve">
    <value>Account settings for Sale Payment Success not found.</value>
  </data>
  <data name="SaleSuccessWithPayment" xml:space="preserve">
    <value>Sale Success with Payment.</value>
  </data>
  <data name="SaleSuccess" xml:space="preserve">
    <value>Sale Success</value>
  </data>
  <data name="PaidSuccessfully" xml:space="preserve">
    <value>Paid Successfully</value>
  </data>
  <data name="ReturnSaleFrom" xml:space="preserve">
    <value>Return Sale from </value>
  </data>
  <data name="AccountSettingsForSaleReturnNotFound" xml:space="preserve">
    <value>Account settings for Sale Return not found.</value>
  </data>
  <data name="AccountSettingsForSaleReturnPaymentPendingNotFound" xml:space="preserve">
    <value>Account settings for Sale Return Payment Pending not found.</value>
  </data>
  <data name="AccountSettingsForSaleReturnPaymentPaidNotFound" xml:space="preserve">
    <value>Account settings for Sale Return Payment Paid not found.</value>
  </data>
  <data name="AccountSettingsForSaleReturnPaymentSuccessNotFound" xml:space="preserve">
    <value>Account settings for Sale Return Payment Success not found.</value>
  </data>
  <data name="ReturnSaleSuccessWithPayment" xml:space="preserve">
    <value>Return Sale Success with Payment.</value>
  </data>
  <data name="ReturnSaleSuccess" xml:space="preserve">
    <value>Return Sale Success</value>
  </data>
  <data name="ReturnSalePaymentPaidTo" xml:space="preserve">
    <value>Return Sale Payment Paid to </value>
  </data>
  <data name="ReturnSalePaymentSsSucceed" xml:space="preserve">
    <value>, Return Sale Payment is Succeed!</value>
  </data>
  <data name="AccountSettingsForReturnPurchaseNotFound" xml:space="preserve">
    <value>Account settings for Purchase Return Payment Return Succeed</value>
  </data>
  <data name="PurchasePaymentRemainingAmountError" xml:space="preserve">
    <value>Purchase Payment Remaining Amount Error</value>
  </data>
  <data name="SalePaymentRemainingAmountError" xml:space="preserve">
    <value>Sale Payment Remaining Amount Error</value>
  </data>
  <data name="OneProductReturnQtyError" xml:space="preserve">
    <value>One Product Return Qty Error</value>
  </data>
  <data name="PurchaseReturn" xml:space="preserve">
    <value>Purchase Return</value>
  </data>
  <data name="ReturnSuccessfully" xml:space="preserve">
    <value>Return Successfully</value>
  </data>
  <data name="UnexpectedIssue" xml:space="preserve">
    <value>Unexpected Issue</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Debit" xml:space="preserve">
    <value>Debit</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="SaleInvoice" xml:space="preserve">
    <value>Sale Invoice: </value>
  </data>
  <data name="Credit" xml:space="preserve">
    <value>Credit</value>
  </data>
  <data name="PaymentPaidTo" xml:space="preserve">
    <value>Payment Paid to: </value>
  </data>
  <data name="PurchasePaymentIsSucceed" xml:space="preserve">
    <value>Purchase Payment Is Succeed</value>
  </data>
  <data name="SalePaymentIsPending" xml:space="preserve">
    <value>Sale Payment Is Pending</value>
  </data>
  <data name="SalePaymentPaidBy" xml:space="preserve">
    <value>Sale Payment Paid By</value>
  </data>
  <data name="SalePaymentIsSucceed" xml:space="preserve">
    <value>Sale Payment Is Succeed</value>
  </data>
  <data name="ReturnSalePaymentIsPending" xml:space="preserve">
    <value>Return Sale Payment Is Pending</value>
  </data>
  <data name="ReturnSalePaymentIsSucceed" xml:space="preserve">
    <value>Return Sale Payment Is Succeed</value>
  </data>
  <data name="CompanyFinancialYearNotSet" xml:space="preserve">
    <value>Company Financial Year Not Set</value>
  </data>
</root>