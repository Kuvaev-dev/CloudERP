//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Localization.CloudERP {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public Messages() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Localization.CloudERP.Messages.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Such data is already contained in the database. Check the form data and try again..
        /// </summary>
        public static string AlreadyExists
        {
            get
            {
                return ResourceManager.GetString("AlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на A branch with the same name, contact, or address already exists for this company..
        /// </summary>
        public static string BranchEists
        {
            get
            {
                return ResourceManager.GetString("BranchEists", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Your сompany financial year is not set! Please contact to Administrator!.
        /// </summary>
        public static string CompanyFinancialYearNotSet
        {
            get
            {
                return ResourceManager.GetString("CompanyFinancialYearNotSet", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Deleted successfully..
        /// </summary>
        public static string DeletedSuccessfully
        {
            get
            {
                return ResourceManager.GetString("DeletedSuccessfully", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Email is already registered.
        /// </summary>
        public static string EmailIsAlreadyRegistered
        {
            get
            {
                return ResourceManager.GetString("EmailIsAlreadyRegistered", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Email is required..
        /// </summary>
        public static string EmailIsRequired
        {
            get
            {
                return ResourceManager.GetString("EmailIsRequired", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на An employee with this email already exists for this company..
        /// </summary>
        public static string EmployeeEmailAlreadyExists
        {
            get
            {
                return ResourceManager.GetString("EmployeeEmailAlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Employee not found..
        /// </summary>
        public static string EmployeeNotFound
        {
            get
            {
                return ResourceManager.GetString("EmployeeNotFound", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Error fetching data from Geoapify API.
        /// </summary>
        public static string ErrorFetchingDataFromGeoapifyAPI
        {
            get
            {
                return ResourceManager.GetString("ErrorFetchingDataFromGeoapifyAPI", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Forecast has been generated:.
        /// </summary>
        public static string ForecastHasBeenGenerated
        {
            get
            {
                return ResourceManager.GetString("ForecastHasBeenGenerated", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid financial year ID..
        /// </summary>
        public static string InvalidFinancialYearID
        {
            get
            {
                return ResourceManager.GetString("InvalidFinancialYearID", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Item added successfully!.
        /// </summary>
        public static string ItemAddedSuccessfully
        {
            get
            {
                return ResourceManager.GetString("ItemAddedSuccessfully", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Item already exists!.
        /// </summary>
        public static string ItemAlreadyExists
        {
            get
            {
                return ResourceManager.GetString("ItemAlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на No data available for forecasting..
        /// </summary>
        public static string NoDataAvailableForForecasting
        {
            get
            {
                return ResourceManager.GetString("NoDataAvailableForForecasting", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Must be at least One Product Return QTY.
        /// </summary>
        public static string OneProductReturnQtyError
        {
            get
            {
                return ResourceManager.GetString("OneProductReturnQtyError", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на You have already requested a password reset. Please wait a while before trying again..
        /// </summary>
        public static string PasswordResetAlreadyRequested
        {
            get
            {
                return ResourceManager.GetString("PasswordResetAlreadyRequested", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Please provide correct details..
        /// </summary>
        public static string PleaseProvideCorrectDetails
        {
            get
            {
                return ResourceManager.GetString("PleaseProvideCorrectDetails", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Please re-login and try again.
        /// </summary>
        public static string PleaseReLoginAndTryAgain
        {
            get
            {
                return ResourceManager.GetString("PleaseReLoginAndTryAgain", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred while retrieving product details..
        /// </summary>
        public static string ProductDetailsFetchingError
        {
            get
            {
                return ResourceManager.GetString("ProductDetailsFetchingError", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Product not found..
        /// </summary>
        public static string ProductNotFound
        {
            get
            {
                return ResourceManager.GetString("ProductNotFound", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Purchase cart is empty.
        /// </summary>
        public static string PurchaseCartIsEmpty
        {
            get
            {
                return ResourceManager.GetString("PurchaseCartIsEmpty", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Purchase is canceled..
        /// </summary>
        public static string PurchaseIsCanceled
        {
            get
            {
                return ResourceManager.GetString("PurchaseIsCanceled", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Payment must be less than or equal to the previous remaining amount..
        /// </summary>
        public static string PurchasePaymentRemainingAmountError
        {
            get
            {
                return ResourceManager.GetString("PurchasePaymentRemainingAmountError", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Purchase return.
        /// </summary>
        public static string PurchaseReturn
        {
            get
            {
                return ResourceManager.GetString("PurchaseReturn", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Record not found.
        /// </summary>
        public static string RecordNotFound
        {
            get
            {
                return ResourceManager.GetString("RecordNotFound", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Registration successful!.
        /// </summary>
        public static string RegistrationSuccessful
        {
            get
            {
                return ResourceManager.GetString("RegistrationSuccessful", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Return successfully.
        /// </summary>
        public static string ReturnSuccessfully
        {
            get
            {
                return ResourceManager.GetString("ReturnSuccessfully", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Salary is already paid.
        /// </summary>
        public static string SalaryIsAlreadyPaid
        {
            get
            {
                return ResourceManager.GetString("SalaryIsAlreadyPaid", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Sale canceled successfully..
        /// </summary>
        public static string SaleCanceledSuccessfully
        {
            get
            {
                return ResourceManager.GetString("SaleCanceledSuccessfully", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Sale cart is empty..
        /// </summary>
        public static string SaleCartEmpty
        {
            get
            {
                return ResourceManager.GetString("SaleCartEmpty", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Sale quantity must be less than or equal to available quantity..
        /// </summary>
        public static string SaleQuantityError
        {
            get
            {
                return ResourceManager.GetString("SaleQuantityError", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Saved Successfully!.
        /// </summary>
        public static string SavedSuccessfully
        {
            get
            {
                return ResourceManager.GetString("SavedSuccessfully", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Your support request has been submitted successfully..
        /// </summary>
        public static string SupportRequestSubmitted
        {
            get
            {
                return ResourceManager.GetString("SupportRequestSubmitted", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Training set has 0 instances, aborting training..
        /// </summary>
        public static string TrainingSetHasZeroInstances
        {
            get
            {
                return ResourceManager.GetString("TrainingSetHasZeroInstances", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на An unexpected error occurred while making changes: .
        /// </summary>
        public static string UnexpectedErrorMessage
        {
            get
            {
                return ResourceManager.GetString("UnexpectedErrorMessage", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Some unexpected issue occurred. Please contact the concerned person!.
        /// </summary>
        public static string UnexpectedIssue
        {
            get
            {
                return ResourceManager.GetString("UnexpectedIssue", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на Updated Successfully!.
        /// </summary>
        public static string UpdatedSuccessfully
        {
            get
            {
                return ResourceManager.GetString("UpdatedSuccessfully", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на A user with this username or email already exists..
        /// </summary>
        public static string UsernameAlreadyExists
        {
            get
            {
                return ResourceManager.GetString("UsernameAlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на User not found..
        /// </summary>
        public static string UserNotFound
        {
            get
            {
                return ResourceManager.GetString("UserNotFound", resourceCulture);
            }
        }
    }
}
