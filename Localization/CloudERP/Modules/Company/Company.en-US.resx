<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllCompanies" xml:space="preserve">
    <value>All Companies</value>
  </data>
  <data name="AddCompanyTitle" xml:space="preserve">
    <value>Add Company Title</value>
  </data>
  <data name="Logo" xml:space="preserve">
    <value>Logo</value>
  </data>
  <data name="UpdateProfile" xml:space="preserve">
    <value>Update Profile</value>
  </data>
  <data name="AddNewCompany" xml:space="preserve">
    <value>Add New Company</value>
  </data>
  <data name="EnterCompanyTitle" xml:space="preserve">
    <value>Enter Company Title</value>
  </data>
  <data name="EnterCompanyLogo" xml:space="preserve">
    <value>Upload Company Logo</value>
  </data>
  <data name="EnterCompanyDescription" xml:space="preserve">
    <value>Enter Company Description</value>
  </data>
  <data name="EditCompany" xml:space="preserve">
    <value>Edit Company</value>
  </data>
  <data name="EnterNewCompanyTitle" xml:space="preserve">
    <value>Enter New Company Title</value>
  </data>
  <data name="EnterNewCompanyLogo" xml:space="preserve">
    <value>Upload New Company Logo</value>
  </data>
  <data name="EnterNewCompanyDescription" xml:space="preserve">
    <value>Enter New Company Description</value>
  </data>
  <data name="CompanyDetails" xml:space="preserve">
    <value>Company Details</value>
  </data>
  <data name="EditProfile" xml:space="preserve">
    <value>Edit Profile</value>
    <comment>Edit Profile</comment>
  </data>
  <data name="AllEmployees" xml:space="preserve">
    <value>All Employees</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>Create User</value>
  </data>
  <data name="SelectBranch" xml:space="preserve">
    <value>Select Branch</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EmployeeName" xml:space="preserve">
    <value>Employee Full Name</value>
  </data>
  <data name="EmployeeSalary" xml:space="preserve">
    <value>Employee Salary</value>
  </data>
  <data name="EnterEmployeeTIN" xml:space="preserve">
    <value>Enter Employee TIN</value>
  </data>
  <data name="MonthlySalaryAmount" xml:space="preserve">
    <value>Monthly Salary Amount</value>
  </data>
  <data name="SalaryOfTheMonth" xml:space="preserve">
    <value>Salary of the Month</value>
  </data>
  <data name="SalaryYear" xml:space="preserve">
    <value>Salary Year</value>
  </data>
  <data name="ProcessSalary" xml:space="preserve">
    <value>Process Salary</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SalariesSucceedList" xml:space="preserve">
    <value>Salaries Succeed List</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="PaidSalary" xml:space="preserve">
    <value>Paid Salary</value>
  </data>
  <data name="SalaryMonth" xml:space="preserve">
    <value>Salary Month</value>
  </data>
  <data name="SalaryInvoice" xml:space="preserve">
    <value>Salary Invoice</value>
  </data>
  <data name="PrintPayroll" xml:space="preserve">
    <value>Print Payroll</value>
  </data>
  <data name="PrintSalaryInvoice" xml:space="preserve">
    <value>Print Salary Invoice</value>
  </data>
  <data name="PrintInvoiceNo" xml:space="preserve">
    <value>INVOICE №</value>
  </data>
  <data name="SalaryPaidDate" xml:space="preserve">
    <value>Salary Paid Date</value>
  </data>
  <data name="TotalSalary" xml:space="preserve">
    <value>Total Salary</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Mandatory" xml:space="preserve">
    <value>Mandatory</value>
  </data>
  <data name="UserProfile" xml:space="preserve">
    <value>User Profile</value>
  </data>
  <data name="EnterUserDetails" xml:space="preserve">
    <value>Enter User Details</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="PersonalProfile" xml:space="preserve">
    <value>Personal Profile</value>
  </data>
  <data name="EnterFocalPersonDetails" xml:space="preserve">
    <value>Enter Focal Person Details</value>
  </data>
  <data name="CityIndex" xml:space="preserve">
    <value>City Index</value>
  </data>
  <data name="CompanyProfile" xml:space="preserve">
    <value>Company Profile</value>
  </data>
  <data name="EnterCompanyDetails" xml:space="preserve">
    <value>Enter Company Details</value>
  </data>
  <data name="BranchContact" xml:space="preserve">
    <value>Branch Contact</value>
  </data>
  <data name="BranchAddress" xml:space="preserve">
    <value>Branch Address</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="PleaseCheckBeforeSubmission" xml:space="preserve">
    <value>Please Check Before Submission</value>
  </data>
  <data name="OneLastCheck" xml:space="preserve">
    <value>One last check</value>
  </data>
  <data name="SubmitRegistration" xml:space="preserve">
    <value>Submit Registration</value>
  </data>
</root>