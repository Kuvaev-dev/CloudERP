//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseAccess
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class tblCustomerReturnPayment
    {
        [Key]
        public int CustomerReturnPaymentID { get; set; }

        [Required(ErrorMessage = "Customer Return Invoice ID is required.")]
        public int CustomerReturnInvoiceID { get; set; }

        [Required(ErrorMessage = "Customer ID is required.")]
        public int CustomerID { get; set; }

        [Required(ErrorMessage = "Customer Invoice ID is required.")]
        public int CustomerInvoiceID { get; set; }

        [Required(ErrorMessage = "Company ID is required.")]
        public int CompanyID { get; set; }

        [Required(ErrorMessage = "Branch ID is required.")]
        public int BranchID { get; set; }

        [Required(ErrorMessage = "Invoice Number is required.")]
        [StringLength(50, ErrorMessage = "Invoice Number cannot be longer than 50 characters.")]
        public string InvoiceNo { get; set; }

        [Required(ErrorMessage = "Total Amount is required.")]
        [Range(0.01, double.MaxValue, ErrorMessage = "Total amount must be greater than 0.")]
        public double TotalAmount { get; set; }

        [Required(ErrorMessage = "Paid Amount is required.")]
        [Range(0.00, double.MaxValue, ErrorMessage = "Paid amount must be 0 or greater.")]
        public double PaidAmount { get; set; }

        [Required(ErrorMessage = "Remaining Balance is required.")]
        [Range(0.00, double.MaxValue, ErrorMessage = "Remaining balance must be 0 or greater.")]
        public double RemainingBalance { get; set; }

        [Required(ErrorMessage = "User ID is required.")]
        public int UserID { get; set; }

        [DataType(DataType.DateTime)]
        [Required(ErrorMessage = "Invoice Date is required.")]
        public DateTime InvoiceDate { get; set; }

        public virtual tblBranch tblBranch { get; set; }
        public virtual tblCompany tblCompany { get; set; }
        public virtual tblCustomer tblCustomer { get; set; }
        public virtual tblCustomerInvoice tblCustomerInvoice { get; set; }
        public virtual tblCustomerReturnInvoice tblCustomerReturnInvoice { get; set; }
        public virtual tblUser tblUser { get; set; }
    }
}
