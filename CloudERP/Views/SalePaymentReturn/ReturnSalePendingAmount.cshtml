@model IEnumerable<Domain.Models.SaleInfo>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using Localization.CloudERP.Modules.Sale
@using Localization.CloudERP.Modules.Purchase
@using Localization.CloudERP.Modules.Miscellaneous
@using Localization.CloudERP.Common
@{
    ViewBag.Title = Sale.ReturnSalesAmountPending;
}

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

<style>
    #dataTable_filter input[type="search"] {
        width: 15rem;
    }
</style>

<div class="card card-default col-md-12">
    <div class="card-header">
        <h3 style="float:left;">@HttpContextAccessor.HttpContext?.Session.GetString("SaleMessage")</h3>
        <h3 class="text-danger">@ViewBag.Message</h3>
        <h3 class="text-danger">@ViewBag.ErrorMessage</h3>
    </div>
    <div class="card-body">
        <div class="table-responsive bootgrid">
            <table class="table table-striped table-bordered table-hover" id="dataTable">
                <thead>
                    <tr>
                        <th>@Miscellaneous.CustomerName</th>
                        <th>@Miscellaneous.InvoiceNo</th>
                        <th>@Sale.InvoiceDate</th>
                        <th>@Sale.ReturnTotalAmount</th>
                        <th>@Purchase.ReturnPaymentAmount</th>
                        <th>@Sale.RemainingBalance</th>
                        <th>@Common.Actions</th>
                    </tr>
                </thead>
                <tbody id="paymentList">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.CustomerName, "CustomerDetails", "Customer", new { id = item.CustomerID }, null)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReturnProductAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReturnPaymentAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RemainingBalance)
                            </td>
                            <td>
                                @{
                                    if (item.ReturnProductAmount - 1 > item.ReturnPaymentAmount)
                                    {
                                        Html.ActionLink(Sale.ReturnPayment, "ReturnAmount", new { id = item.CustomerInvoiceID }, new { @class = "btn btn-primary" });
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#dataTable').DataTable({
            layout: {
                topStart: {
                    buttons: [
                        { extend: 'copy', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } },
                        { extend: 'csv', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } },
                        { extend: 'excel', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } },
                        { extend: 'pdf', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } },
                        { extend: 'print', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } }
                    ]
                },
                topEnd: 'search',
                bottomStart: 'info',
                bottomEnd: 'paging',
                top2Start: 'pageLength'
            },
            "columnDefs": [{ "orderable": false, "targets": 6 }],
            "lengthMenu": [[5, 10, 25, 50, 75, 100, 150, 200, -1], [5, 10, 25, 50, 75, 100, 150, 200, "All"]],
        });
    });
</script>