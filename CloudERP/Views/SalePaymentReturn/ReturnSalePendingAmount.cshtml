@model IEnumerable<DatabaseAccess.Models.SalePaymentModel>

@{
    ViewBag.Title = Resources.Sale.ReturnSalesAmountPending;
}

<script src="~/Scripts/jquery-3.7.1.js"></script>

<div class="card card-default col-md-12">
    <div class="card-header">
        <h3 style="float:left;">@Session["SaleMessage"]</h3>
        <h3 class="text-danger">@ViewBag.Message</h3>
        <h3 class="text-danger">@ViewBag.ErrorMessage</h3>
        <input class="form-control col-md-3" style="float:right;" type="text" id="searchPayment" name="searchPayment" placeholder="Search..." />
    </div>
    <div class="card-body">
        <div class="table-responsive bootgrid">
            <table class="table table-striped table-bordered table-hover" id="dataTable">
                <thead>
                    <tr>
                        <th>@Resources.Miscellaneous.CustomerName</th>
                        <th>@Resources.Miscellaneous.InvoiceNo</th>
                        <th>@Resources.Sale.InvoiceDate</th>
                        <th>@Resources.Sale.ReturnTotalAmount</th>
                        <th>@Resources.Sale.ReturnPaymentAmount</th>
                        <th>@Resources.Sale.RemainingBalance</th>
                        <th>@Resources.Common.Actions</th>
                    </tr>
                </thead>
                <tbody id="paymentList">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.CustomerName, "CustomerDetails", "Customer", new { id = item.CustomerID }, null)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReturnProductAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReturnPaymentAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RemainingBalance)
                            </td>
                            <td>
                                @{
                                    if (item.ReturnProductAmount - 1 > item.ReturnPaymentAmount)
                                    {
                                        Html.ActionLink(Resources.Sale.ReturnPayment, "ReturnAmount", new { id = item.CustomerInvoiceID }, new { @class = "btn btn-primary" });
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#searchPayment").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#paymentList tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>