@model IEnumerable<Domain.Models.SaleInfo>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using Localization.CloudERP.Modules.Sale
@using Localization.CloudERP.Modules.Miscellaneous
@using Localization.CloudERP.Common
@{
    ViewBag.Title = Sale.AllReturnSalesAmountPending;
}

<!-- Tables Sorting-->
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<link href="https://cdn.datatables.net/v/bs5/dt-2.2.2/datatables.min.css" rel="stylesheet">
<script src="https://cdn.datatables.net/v/bs5/dt-2.2.2/datatables.min.js"></script>

<style>
    #dataTable_filter input[type="search"] {
        width: 15rem;
    }
</style>

<div class="card card-default col-md-12">
    <div class="card-header">
        <h5 style="float:left;">@HttpContextAccessor.HttpContext?.Session.GetString("ReturnMessage")</h5>
        <h3 class="text-danger">@ViewBag.Message</h3>
        <h3 class="text-danger">@ViewBag.ErrorMessage</h3>
    </div>
    <div class="card-body">
        <div class="table-responsive bootgrid">
            <table class="table table-striped table-bordered table-hover" id="dataTable">
                <thead>
                    <tr>
                        <th>
                            @Sale.Customer
                        </th>
                        <th>
                            @Localization.CloudERP.Modules.User.User.ContactNo
                        </th>
                        <th>
                            @Miscellaneous.InvoiceNo
                        </th>
                        <th>
                            @Miscellaneous.Date
                        </th>
                        <th>
                            @Sale.SaleTotalAmount
                        </th>
                        <th>
                            @Sale.ReturnProductsTotalAmount
                        </th>
                        <th>
                            @Sale.AfterReturnSaleTotalAmount
                        </th>
                        <th>
                            @Sale.PaidAmount
                        </th>
                        <th>
                            @Sale.PaymentToCustomer
                        </th>
                        <th>
                            @Sale.RemainingBalance
                        </th>
                        <th>
                            @Common.Actions
                        </th>
                    </tr>
                </thead>
                <tbody id="paymentList">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.CustomerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CustomerContactNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TotalAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReturnProductAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AfterReturnTotalAmount)
                            </td>
                            <td>
                                @{
                                    if (item.PaymentAmount == 0)
                                    {
                                        @Html.ActionLink(Sale.SetPaid, "PaidAmount", "SalePayment", new { id = item.CustomerInvoiceID }, new { @class = "text-success" })
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.PaymentAmount)
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReturnPaymentAmount)
                            </td>
                            <td>
                                @{
                                    if (item.RemainingBalance == 0 && item.PaymentAmount != 0)
                                    {
                                        <em class="icon-check">
                                            <label class="text-success">@Sale.Clear</label>
                                        </em>
                                    }
                                    else if (item.RemainingBalance < 0)
                                    {
                                        @Html.ActionLink(item.RemainingBalance.ToString("F2"), "ReturnSalePendingAmount", "SalePaymentReturn", new { @id = item.CustomerInvoiceID }, new { @class = "btn btn-outline-danger btn-lg" })
                                    }
                                    else
                                    {
                                        <label>@(item.TotalAmount - item.PaymentAmount)</label>
                                    }
                                }
                            </td>
                            <td class="d-flex flex-column align-items-start">
                                @{
                                    if (item.RemainingBalance < item.TotalAmount && item.PaymentAmount != 0)
                                    {
                                        @Html.ActionLink(Sale.PayHistory, "PaidHistory", "SalePayment", new { id = item.CustomerInvoiceID }, new { @class = "btn btn-primary" })
                                    }
                                    else
                                    {
                                        <em class="icon-book-open">
                                            <label class="text-danger"><b>@Sale.NoHistory</b></label>
                                        </em>
                                        <br />
                                    }
                                    @Html.ActionLink(Sale.ViewDetails, "SaleItemDetail", "SalePayment", new { id = item.CustomerInvoiceID }, new { @class = "btn btn-info" })
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#dataTable').DataTable({
            "columnDefs": [{ "orderable": false, "targets": 10 }],
            "lengthMenu": [[5, 10, 25, 50, 75, 100, 150, 200, -1], [5, 10, 25, 50, 75, 100, 150, 200, "All"]],
        });
    });
</script>