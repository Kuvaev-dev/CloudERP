@model CloudERP.Models.RegistrationMV
@{
    ViewBag.Title = Resources.CompanyRegistration.AddNewCompany.ToString();
}

<div class="card card-default col-md-12">
    <div class="card-header">
        @Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Registration))
        <p class="text-danger">@ViewBag.Message</p>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("RegistrationForm", "CompanyRegistration", FormMethod.Post, new { @id = "example-form" }))
        {
            @Html.AntiForgeryToken()

            <div>
                <h4>
                    @Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.UserProfile))
                    <br>
                    <small>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.EnterUserDetails))</small>
                </h4>
                <fieldset>
                    <div class="row">
                        <div class="col-md-4">
                            <label for="userName">@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.UserName)) *</label>
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control required", @id = "UserName" })
                            @Html.ValidationMessageFor(model => model.UserName)
                        </div>
                        <div class="col-md-4">
                            <label for="password">@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Password)) *</label>
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control required", @id = "Password" })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                    </div>
                    <p>(*) @Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Mandatory))</p>
                </fieldset>
                <h4>
                    @Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.PersonalProfile))
                    <br>
                    <small>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.EnterFocalPersonDetails))</small>
                </h4>
                <fieldset>
                    <div class="row">
                        <div class="col-md-4">
                            <label for="name">@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.EmployeeName)) *</label>
                            @Html.TextBoxFor(model => model.EmployeeName, new { @class = "form-control required", @id = "EName" })
                            @Html.ValidationMessageFor(model => model.EmployeeName)
                        </div>
                        <div class="col-md-4">
                            <label for="surname">@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.ContactNo)) *</label>
                            @Html.TextBoxFor(model => model.EmployeeContactNo, new { @class = "form-control required", @id = "EContactNo" })
                            @Html.ValidationMessageFor(model => model.EmployeeContactNo)
                        </div>
                        <div class="col-md-4">
                            <label for="email">@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Email)) *</label>
                            @Html.TextBoxFor(model => model.EmployeeEmail, new { @class = "form-control required", @id = "EEmail" })
                            @Html.ValidationMessageFor(model => model.EmployeeEmail)
                        </div>
                        <div class="col-md-4">
                            <label>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.CityIndex))</label>
                            @Html.TextBoxFor(model => model.EmployeeTIN, new { @class = "form-control required", @id = "ECNIC" })
                            @Html.ValidationMessageFor(model => model.EmployeeTIN)
                        </div>
                        <div class="col-md-4">
                            <label>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Designation))</label>
                            @Html.TextBoxFor(model => model.EmployeeDesignation, new { @class = "form-control required", @id = "EDesignation" })
                            @Html.ValidationMessageFor(model => model.EmployeeDesignation)
                        </div>
                        <div class="col-md-4">
                            <label>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.BasicSalary))</label>
                            @Html.TextBoxFor(model => model.EmployeeMonthlySalary, new { @class = "form-control required", @id = "EMonthlySalary", @type = "number" })
                            @Html.ValidationMessageFor(model => model.EmployeeMonthlySalary)
                        </div>
                        <div class="col-md-12">
                            <label>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Address))</label>
                            @Html.TextBoxFor(model => model.EmployeeAddress, new { @class = "form-control required", @id = "EAddress" })
                            @Html.ValidationMessageFor(model => model.EmployeeAddress)
                        </div>
                    </div>
                    <p>(*) @Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Mandatory))</p>
                </fieldset>
                <h4>
                    @Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.CompanyProfile))
                    <br>
                    <small>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.EnterCompanyDetails))</small>
                </h4>
                <fieldset>
                    <div class="row">
                        <div class="col-md-6">
                            <label for="name">@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Company)) *</label>
                            @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control required", @id = "CName" })
                            @Html.ValidationMessageFor(model => model.CompanyName)
                        </div>
                        <div class="col-md-6">
                            <label>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.BranchTitle)) *</label>
                            @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control required", @id = "BranchName" })
                            @Html.ValidationMessageFor(model => model.BranchName)
                        </div>
                        <div class="col-md-6">
                            <label>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.BranchContact)) *</label>
                            @Html.TextBoxFor(model => model.BranchContact, new { @class = "form-control required", @id = "BranchContact" })
                            @Html.ValidationMessageFor(model => model.BranchContact)
                        </div>
                        <div class="col-md-6">
                            <label>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.BranchAddress))</label>
                            @Html.TextBoxFor(model => model.BranchAddress, new { @class = "form-control required", @id = "BranchAddress" })
                            @Html.ValidationMessageFor(model => model.BranchAddress)
                        </div>
                    </div>
                    <p>(*) @Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Mandatory))</p>
                </fieldset>
                <h4>
                    @Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.Finish))
                    <br>
                    <small>@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.PleaseCheckBeforeSubmission))</small>
                </h4>
                <fieldset>
                    <p class="lead">@Html.Raw(HttpUtility.HtmlDecode(Resources.CompanyRegistration.OneLastCheck))</p>
                    <input type="submit" value="@Resources.CompanyRegistration.SubmitRegistration" class="btn btn-outline-success" />
                </fieldset>
            </div>
        }
    </div>
</div>