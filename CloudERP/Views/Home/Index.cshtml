@model DatabaseAccess.Models.DashboardModel
@{
    ViewBag.Title = Resources.Dashboard.DashboardTitle.ToString();
    DateTime currentDate = DateTime.Now;
    string currentYear = currentDate.ToString("yyyy");
    string cultureCode = Session["Culture"] as string ?? "en-US";
    var cultureInfo = new System.Globalization.CultureInfo(cultureCode);
    string currentMonth = currentDate.ToString("MMMM", cultureInfo);
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<body>
    <div class="wrapper">
        <!-- Page content-->
        <div class="content-wrapper">
            <!-- START cards box-->
            <div class="row">
                <div class="col-xl-3 col-md-6">
                    <!-- START card-->
                    <div class="card flex-row align-items-center align-items-stretch border-0">
                        <div class="col-4 d-flex align-items-center bg-primary-dark justify-content-center rounded-left text-center">
                            <p>
                                @currentMonth
                                <br />
                                <span class="h2 mt-0">@currentYear</span>
                            </p>
                        </div>
                        <div class="col-8 py-3 bg-primary rounded-right">
                            <div class="mt-0">
                                <div class="h3 d-inline">@Html.DisplayFor(model => Model.CurrentMonthRevenue)</div>
                                <div class="h4 d-inline">&nbsp;@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="mt-3">@Html.Raw(HttpUtility.HtmlDecode(Resources.Dashboard.CurrentMonthRevenue))</div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <!-- START card-->
                    <div class="card flex-row align-items-center align-items-stretch border-0">
                        <div class="col-4 d-flex align-items-center bg-purple-dark justify-content-center rounded-left text-center">
                            <p>
                                @currentMonth
                                <br />
                                <span class="h2 mt-0">@currentYear</span>
                            </p>
                        </div>
                        <div class="col-8 py-3 bg-purple rounded-right">
                            <div class="mt-0">
                                <div class="h3 d-inline">@Html.DisplayFor(model => Model.CurrentMonthExpenses)</div>
                                <div class="h4 d-inline">&nbsp;@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="mt-3">@Html.Raw(HttpUtility.HtmlDecode(Resources.Dashboard.CurrentMonthExpenses))</div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <!-- START card-->
                    <div class="card flex-row align-items-center align-items-stretch border-0">
                        <div class="col-4 d-flex align-items-center bg-purple-light justify-content-center rounded-left text-center">
                            <p>
                                @currentMonth
                                <br />
                                <span class="h2 mt-0">@currentYear</span>
                            </p>
                        </div>
                        <div class="col-8 py-3 bg-purple rounded-right">
                            <div class="mt-0">
                                <div class="h3 d-inline">@Html.DisplayFor(model => Model.CurrentMonthRecovery)</div>
                                <div class="h4 d-inline">&nbsp;@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="mt-3">@Html.Raw(HttpUtility.HtmlDecode(Resources.Dashboard.CurrentMonthRecovery))</div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <!-- START card-->
                    <div class="card flex-row align-items-center align-items-stretch border-0">
                        <div class="col-4 d-flex align-items-center bg-green-dark justify-content-center rounded-left text-center">
                            <i class="fa-solid fa-layer-group fa-4x"></i>
                        </div>
                        <div class="col-8 py-3 bg-green rounded-right">
                            <div class="mt-0">
                                <div class="h3 d-inline">@Html.DisplayFor(model => Model.NetIncome)</div>
                                <div class="h4 d-inline">&nbsp;@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="mt-3">@Html.Raw(HttpUtility.HtmlDecode(Resources.Dashboard.NetProfitLoss))</div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <!-- START card-->
                    <div class="card flex-row align-items-center align-items-stretch border-0">
                        <div class="col-4 d-flex align-items-center bg-green-dark justify-content-center rounded-left text-center">
                            <i class="fa-regular fa-comments fa-4x"></i>
                        </div>
                        <div class="col-8 py-3 bg-green rounded-right">
                            <div class="mt-0">
                                <div class="h3 d-inline">@Html.DisplayFor(model => Model.NetIncome)</div>
                                <div class="h4 d-inline">&nbsp;@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="mt-3">@Html.Raw(HttpUtility.HtmlDecode(Resources.Dashboard.NetProfitLoss))</div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <!-- START card-->
                    <div class="card flex-row align-items-center align-items-stretch border-0">
                        <div class="col-4 d-flex align-items-center bg-dark justify-content-center rounded-left text-center">
                            <i class="fa-regular fa-gem fa-4x" style="color:white;"></i>
                        </div>
                        <div class="col-8 py-3 bg-gray-light rounded-right">
                            <div class="mt-0">
                                <div class="h3 d-inline">@Html.DisplayFor(model => Model.CashPlusBankAccountBalance)</div>
                                <div class="h4 d-inline">&nbsp;@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="mt-3">@Html.Raw(HttpUtility.HtmlDecode(Resources.Dashboard.CaseBankBalance))</div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <!-- START card-->
                    <div class="card flex-row align-items-center align-items-stretch border-0">
                        <div class="col-4 d-flex align-items-center bg-purple-dark justify-content-center rounded-left text-center">
                            <i class="fa-solid fa-chevron-up fa-4x"></i>
                        </div>
                        <div class="col-8 py-3 bg-purple-light rounded-right">
                            <div class="mt-0">
                                <div class="h3 d-inline">@Html.DisplayFor(model => Model.TotalReceivable)</div>
                                <div class="h4 d-inline">&nbsp;@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="mt-3">@Html.Raw(HttpUtility.HtmlDecode(Resources.Dashboard.TotalReceivable))</div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <!-- START card-->
                    <div class="card flex-row align-items-center align-items-stretch border-0">
                        <div class="col-4 d-flex align-items-center bg-green-dark justify-content-center rounded-left text-center">
                            <i class="fa-solid fa-money-check-dollar fa-4x"></i>
                        </div>
                        <div class="col-8 py-3 bg-green-light rounded-right">
                            <div class="mt-0">
                                <div class="h3 d-inline">@Html.DisplayFor(model => Model.TotalPayable)</div>
                                <div class="h4 d-inline">&nbsp;@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="mt-3">@Html.Raw(HttpUtility.HtmlDecode(Resources.Dashboard.TotalPayable))</div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- START charts-->
            <div class="row">
                <div class="col-md-6">
                    <div class="row mt-3">
                        <div class="h3 col-md-12">Total Sale`s Per Day</div>
                    </div>
                    <div class="card border-0">
                        <div class="card-body">
                            <canvas id="todaySalesChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row mt-3">
                        <div class="h3 col-md-12">Total Purchase`s Per Day</div>
                    </div>
                    <div class="card border-0">
                        <div class="card-body">
                            <canvas id="todayPurchasesChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="row mt-3">
                        <div class="h3 col-md-12">Total Sale`s Per Month : @currentMonth @currentYear</div>
                    </div>
                    <div class="card border-0">
                        <div class="card-body">
                            <canvas id="currentMonthSalesChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row mt-3">
                        <div class="h3 col-md-12">Total Purchase`s Per Month : @currentMonth @currentYear</div>
                    </div>
                    <div class="card border-0">
                        <div class="card-body">
                            <canvas id="currentMonthPurchasesChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <!-- END charts-->
            <div class="row mt-3">
                <div class="h3 col-md-5">@Resources.Dashboard.TodaySalesPurchases.ToString()</div>
            </div>
            <div class="row">
                <div class="col-xl-12 block-center">
                    <div class="card border-0">
                        <div class="row row-flush">
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.TotalSales.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.TotalSalesToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.SalesPaymentPending.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.SalesPaymentPendingToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.SalesPaymentPaid.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.SalesPaymentPaidToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.TotalPurchases.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.TotalPurchasesToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.PurchasesPaymentPending.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.PurchasesPaymentPendingToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.PurchasesPaymentPaid.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.PurchasesPaymentPaidToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="h3 col-md-7">@Resources.Dashboard.TodayReturnSalesReturnPurchases.ToString()</div>
            </div>
            <div class="row">
                <div class="col-xl-12 block-center">
                    <div class="card border-0">
                        <div class="row row-flush">
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.TotalReturnSales.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.TotalReturnSalesToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.ReturnSalesPaymentPending.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.ReturnSalesPaymentPendingToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.ReturnSalesPaymentPaid.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.ReturnSalesPaymentPaidToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.TotalReturnPurchases.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.TotalReturnPurchasesToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.ReturnPurchasesPaymentPending.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.ReturnPurchasesPaymentPendingToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.ReturnPurchasesPaymentPaid.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.ReturnPurchasesPaymentPaidToday)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="h3 col-md-5">@Resources.Dashboard.SalesPurchases.ToString() : @currentMonth @currentYear</div>
            </div>
            <div class="row">
                <div class="col-xl-12 block-center">
                    <div class="card border-0">
                        <div class="row row-flush">
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.TotalSales.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.TotalSalesCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.SalesPaymentPending.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.SalesPaymentPendingCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.SalesPaymentPaid.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.SalesPaymentPaidCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.TotalPurchases.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.TotalPurchasesCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.PurchasesPaymentPending.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.PurchasesPaymentPendingCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.PurchasesPaymentPaid.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.PurchasesPaymentPaidCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="h3 col-md-6">@Resources.Dashboard.ReturnSalesReturnPurchases.ToString() : @currentMonth @currentYear</div>
            </div>
            <div class="row">
                <div class="col-xl-12 block-center">
                    <div class="card border-0">
                        <div class="row row-flush">
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.TotalReturnSales.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.TotalReturnSalesCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.ReturnSalesPaymentPending.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.ReturnSalesPaymentPendingCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.ReturnSalesPaymentPaid.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.ReturnSalesPaymentPaidCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.TotalReturnPurchases.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.TotalReturnPurchasesCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.ReturnPurchasesPaymentPending.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.ReturnPurchasesPaymentPendingCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                            <div class="col-lg-2 col-md-3 py-2 text-center br">
                                <div class="text-info text-sm">@Resources.Dashboard.ReturnPurchasesPaymentPaid.ToString()</div>
                                <div class="text-info">
                                    <span class="text-muted">@Html.DisplayFor(model => Model.ReturnPurchasesPaymentPaidCurrentMonth)</span>
                                </div>
                                <div class="text-muted">@Resources.Repeats.UAH.ToString()</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
<script>
    // Graph for Total Sales Today
    var salesChartCtx = document.getElementById('todaySalesChart').getContext('2d');
    var salesTotal = @Model.TotalSalesToday;
    var salesReturn = @Model.TotalReturnSalesToday;
    var salesPaid = salesTotal - salesReturn;

    var salesChart = new Chart(salesChartCtx, {
        type: 'bar',
        data: {
            labels: ['Total Sales', 'Return Sales', 'Paid Sales'],
            datasets: [{
                data: [salesTotal, salesReturn, salesPaid],
                backgroundColor: ['#36a2eb', '#ffcd56', '#ff6384'],
                borderColor: ['#36a2eb', '#ffcd56', '#ff6384'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Graph for Total Purchases Today
    var purchasesChartCtx = document.getElementById('todayPurchasesChart').getContext('2d');
    var purchasesTotal = @Model.TotalPurchasesToday;
    var purchasesReturn = @Model.TotalReturnPurchasesToday;
    var purchasesPaid = purchasesTotal - purchasesReturn;

    var purchasesChart = new Chart(purchasesChartCtx, {
        type: 'bar',
        data: {
            labels: ['Total Purchases', 'Return Purchases', 'Paid Purchases'],
            datasets: [{
                data: [purchasesTotal, purchasesReturn, purchasesPaid],
                backgroundColor: ['#36a2eb', '#ffcd56', '#ff6384'],
                borderColor: ['#36a2eb', '#ffcd56', '#ff6384'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Graph for Total Sales Current Month
    var salesChartMonthCtx = document.getElementById('currentMonthSalesChart').getContext('2d');
    var salesTotalMonth = @Model.TotalSalesCurrentMonth;
    var salesReturnMonth = @Model.TotalReturnSalesCurrentMonth;
    var salesPaidMonth = salesTotalMonth - salesReturnMonth;

    var salesChartMonth = new Chart(salesChartMonthCtx, {
        type: 'bar',
        data: {
            labels: ['Total Sales', 'Return Sales', 'Paid Sales'],
            datasets: [{
                data: [salesTotalMonth, salesReturnMonth, salesPaidMonth],
                backgroundColor: ['#36a2eb', '#ffcd56', '#ff6384'],
                borderColor: ['#36a2eb', '#ffcd56', '#ff6384'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Graph for Total Purchases Current Month
    var purchasesChartMonthCtx = document.getElementById('currentMonthPurchasesChart').getContext('2d');
    var purchasesTotalMonth = @Model.TotalPurchasesCurrentMonth;
    var purchasesReturnMonth = @Model.TotalReturnPurchasesCurrentMonth;
    var purchasesPaidMonth = purchasesTotalMonth - purchasesReturnMonth;

    var purchasesChartMonth = new Chart(purchasesChartMonthCtx, {
        type: 'bar',
        data: {
            labels: ['Total Purchases', 'Return Purchases', 'Paid Purchases'],
            datasets: [{
                data: [purchasesTotalMonth, purchasesReturnMonth, purchasesPaidMonth],
                backgroundColor: ['#36a2eb', '#ffcd56', '#ff6384'],
                borderColor: ['#36a2eb', '#ffcd56', '#ff6384'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    function adjustFontSize() {
        const container = document.querySelectorAll('.responsive-text-container');
        container.forEach(element => {
            const textElement = element.querySelector('.responsive-text');
            let fontSize = parseFloat(window.getComputedStyle(textElement).fontSize);

            while (textElement.scrollWidth > element.clientWidth && fontSize > 0) {
                fontSize -= 1;
                textElement.style.fontSize = fontSize + 'px';
            }
        });
    }

    window.addEventListener('load', adjustFontSize);
    window.addEventListener('resize', adjustFontSize);
</script>
