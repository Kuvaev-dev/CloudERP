@model IEnumerable<Domain.Models.Stock>
@using Localization.CloudERP.Modules.Miscellaneous
@using Localization.CloudERP.Modules.Sale
@using Localization.CloudERP.Common
@{
    ViewBag.Title = Miscellaneous.StockDetails;
}

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

<style>
    #dataTable_filter input[type="search"] {
        width: 15rem;
    }
</style>

<div class="card card-default col-md-12">
    <div class="card-header">
        @Html.ActionLink(Miscellaneous.AddProduct, "Create", "Stock", null, new { @style = "float:left;", @class = "btn btn-success" })
        <h3 class="text-danger">@ViewBag.Message</h3>
        <h3 class="text-danger">@ViewBag.ErrorMessage</h3>
    </div>
    <div class="card-body">
        <div class="table-responsive bootgrid">
            <table class="table table-striped table-bordered table-hover" id="dataTable">
                <thead>
                    <tr>
                        <th>
                            @Html.Raw(Miscellaneous.CategoryName)
                        </th>
                        <th>
                            @Html.Raw(Miscellaneous.Items)
                        </th>
                        <th>
                            @Html.Raw(Miscellaneous.CurrentQty)
                        </th>
                        <th>
                            @Html.Raw(Miscellaneous.ExpiryDate)
                        </th>
                        <th>
                            @Html.Raw(Miscellaneous.ManufactureDate)
                        </th>
                        <th>
                            @Html.Raw(Miscellaneous.Status)
                        </th>
                        <th>
                            @Html.Raw(Common.Actions)
                        </th>
                    </tr>
                </thead>
                <tbody id="productList">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.CategoryName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ExpiryDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Manufacture)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsActive)
                            </td>
                            <td class="d-flex btn-group">
                                @Html.ActionLink(Common.Update, "Edit", new { id = item.ProductID }, new { @class = "btn btn-primary" })
                                @Html.ActionLink(Miscellaneous.ItemDetail, "Details", new { id = item.ProductID }, new { @class = "btn btn-info" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#dataTable').DataTable({
            layout: {
                topStart: {
                    buttons: [
                        { extend: 'copy', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } },
                        { extend: 'csv', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } },
                        { extend: 'excel', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } },
                        { extend: 'pdf', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } },
                        { extend: 'print', className: 'btn btn-secondary', exportOptions: { columns: ':not(:last-child)' } }
                    ]
                },
                topEnd: 'search',
                bottomStart: 'info',
                bottomEnd: 'paging',
                top2Start: 'pageLength'
            },
            columnDefs: [{ orderable: false, targets: 6 }],
            lengthMenu: [[5, 10, 25, 50, 75, 100, 150, 200, -1], [5, 10, 25, 50, 75, 100, 150, 200, "*"]],
        });
    });
</script>
