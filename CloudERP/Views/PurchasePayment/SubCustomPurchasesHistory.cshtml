@model IEnumerable<DatabaseAccess.Models.PurchasePaymentModel>

@{
    ViewBag.Title = Resources.Purchase.CustomBasePurchasesHistory;
}

<script src="~/Scripts/jquery-3.7.1.js"></script>

<div class="card">
    <div class="card card-float">
        <div class="card-header">
            <h4>@Html.Raw(HttpUtility.HtmlDecode(Resources.Miscellaneous.SelectRangeFromDateAndToDate))</h4>
            <h3 class="text-danger">@ViewBag.Message</h3>
            <h3 class="text-danger">@ViewBag.ErrorMessage</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("SubCustomPurchasesHistory", "PurchasePayment", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="text" value="@ViewBag.InvoiceID" id="id" name="id" style="display:none;" />
                <div class="row">
                    <div class="col-md-4">
                        <label>@Html.Raw(HttpUtility.HtmlDecode(Resources.Miscellaneous.SelectFromDate))</label>
                        <input type="date" id="FromDate" name="FromDate" value="@DateTime.Now" class="form-control" required>
                    </div>
                    <div class="col-md-4">
                        <label>@Html.Raw(HttpUtility.HtmlDecode(Resources.Miscellaneous.SelectToDate))</label>
                        <input type="date" id="ToDate" name="ToDate" value="@DateTime.Now" class="form-control" required>
                    </div>
                </div>
                <br />
                <br />
                <input type="submit" value="@Resources.Sale.RetriveSalesRecord" class="btn btn-success" style="float: right;">
            }
        </div>
    </div>
</div>

<div class="card card-default col-md-12">
    <div class="card-header">
        <h5 style="float:left;">@Session["Message"]</h5>
    </div>
    <div class="card-body">
        <div class="table-responsive bootgrid">
            <table class="table table-striped table-bordered table-hover" id="dataTable">
                <thead>
                    <tr>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Sale.Supplier))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Miscellaneous.ContactNo))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Miscellaneous.InvoiceNo))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Miscellaneous.Date))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Sale.TotalAmount))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Sale.ReturnProductsTotalAmount))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Purchase.AfterReturnTotalAmount))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Sale.PaidAmount))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Sale.PaymentAmount))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Sale.RemainingBalance))
                        </th>
                        <th>
                            @Html.Raw(HttpUtility.HtmlDecode(Resources.Common.Actions))
                        </th>
                    </tr>
                </thead>
                <tbody id="paymentList">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.SupplierName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SupplierContactNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TotalAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReturnProductAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AfterReturnTotalAmount)
                            </td>
                            <td>
                                @{
                                    if (item.PaymentAmount == 0 && item.AfterReturnTotalAmount > 0)
                                    {
                                        @Html.ActionLink(Resources.Purchase.SetPayment, "PaidAmount", new { id = item.SupplierInvoiceID }, new { @class = "text-success" })
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.PaymentAmount)
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReturnPaymentAmount)
                            </td>
                            <td>
                                @{
                                    if (item.RemainingBalance == 0 && item.PaymentAmount != 0)
                                    {
                                        <em class="icon-check">
                                            <label class="text-success">@Html.Raw(HttpUtility.HtmlDecode(Resources.Purchase.Clear))</label>
                                        </em>
                                    }
                                    else if (item.RemainingBalance < 0)
                                    {
                                        @*<button class="btn btn-outline-danger btn-lg" type="button" data-toggle="modal" data-target="#myModal">@item.RemainingBalance</button>*@
                                        @*<button class="btn btn-outline-danger btn-lg" type="button">@item.RemainingBalance</button>*@
                                        @Html.ActionLink(item.RemainingBalance.ToString("F2"), "ReturnPurchasePendingAmount", "PurchasePaymentReturn", new { @id = item.SupplierInvoiceID }, new { @class = "btn btn-outline-danger btn-lg" })
                                    }
                                    else
                                    {
                                        <label>@Html.DisplayFor(modelItem => item.RemainingBalance)</label>
                                    }
                                }
                            </td>
                            <td class="btn-group">
                                @{
                                    if (item.RemainingBalance < item.TotalAmount && item.PaymentAmount != 0)
                                    {
                                        Html.ActionLink(Resources.Purchase.PayHistory, "PaidHistory", new { id = item.SupplierInvoiceID }, new { @class = "btn btn-primary" });
                                    }
                                    else
                                    {
                                        <em class="icon-book-open">
                                            <label class="text-danger"><b>@Html.Raw(HttpUtility.HtmlDecode(Resources.Purchase.NoHistory))</b></label>
                                        </em>
                                    }
                                }

                                @Html.ActionLink(Resources.Purchase.ViewDetails, "PurchaseItemDetail", new { id = item.SupplierInvoiceID }, new { @class = "btn btn-info" });
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#dataTable').DataTable({
            "columnDefs": [{ "orderable": false, "targets": 10 }],
            "lengthMenu": [[5, 10, 25, 50, 75, 100, 150, 200, -1], [5, 10, 25, 50, 75, 100, 150, 200, "All"]],
        });
    });
</script>