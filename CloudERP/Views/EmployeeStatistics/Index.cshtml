@model IEnumerable<Domain.Models.EmployeeStatistics>
@using Localization.CloudERP.Modules.Miscellaneous
@{
    ViewBag.Title = Localization.CloudERP.Modules.User.User.EmployeeRegistrationStatistics;
    var chartData = ViewBag.ChartData;
}

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

<!-- Date Selection Form -->
<div class="card">
    <div class="card card-float">
        <div class="card-header">
            <h4>@Html.Raw(Localization.CloudERP.Modules.User.User.SelectRangeFromDateAndToDate)</h4>
            <h5 class="text-danger">@ViewBag.Message</h5>
            <h5 class="text-danger">@ViewBag.ErrorMessage</h5>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Index", "EmployeeStatistics", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-md-4">
                        <label>@Html.Raw(Miscellaneous.SelectFromDate)</label>
                        <input type="date" id="startDate" name="startDate" value="@Context.Request.Query["startDate"]" class="form-control" required>
                    </div>
                    <div class="col-md-4">
                        <label>@Html.Raw(Miscellaneous.SelectToDate)</label>
                        <input type="date" id="endDate" name="endDate" value="@Context.Request.Query["endDate"]" class="form-control" required>
                    </div>
                </div>
                <br />
                <input type="submit" value="@Localization.CloudERP.Modules.User.User.Retrieve" class="btn btn-success" style="float: right;">
            }
        </div>
    </div>
</div>

<!-- Chart -->
<div class="card card-default col-md-12">
    <div class="card-header">
        <h5>@Localization.CloudERP.Modules.User.User.Statistics</h5>
    </div>
    <div class="card-body">
        <canvas id="chartContainer" style="height: 400px; width: 100%;"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var chartData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(chartData));

        const localizedLabels = {
            user: {
                numberOfRegistrations: '@Html.Raw(Localization.CloudERP.Modules.User.User.NumberOfRegistrations)',
                canvasNotFound: '@Html.Raw(Localization.CloudERP.Modules.User.User.CanvasElementWithIdChartContainerNotFound)'
            }
        };

        var canvas = document.getElementById('chartContainer');

        if (canvas) {
            var ctx = canvas.getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: chartData.Labels,
                    datasets: [{
                        label: localizedLabels.user.numberOfRegistrations,
                        data: chartData.Data,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
        } else {
            console.error(localizedLabels.user.canvasNotFound);
        }
    });
</script>