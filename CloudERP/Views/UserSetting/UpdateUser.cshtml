@model Domain.Models.User

@{
    ViewBag.Title = Resources.Account.UpdateUser.ToString();
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css" />

<script src="~/Scripts/jQuery/jquery-3.7.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>

<script>
    window.Culture = '@Session["Culture"]';
</script>
<script src="~/Scripts/CustomScripts/VoiceRecognition.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3 class="text-danger">@ViewBag.Message</h3>
        <h3 class="text-danger">@ViewBag.ErrorMessage</h3>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)

        <div class="form-group">
            @Html.LabelFor(model => model.UserTypeID, Resources.Account.NewUserTypeID.ToString(), htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                @Html.DropDownList("UserTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, Resources.Account.NewFullName.ToString(), htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, Resources.Account.NewEmail.ToString(), htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNo, Resources.Account.NewContactNo.ToString(), htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", @id = "PhoneNumber" } })
                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, Resources.Account.NewUserName.ToString(), htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Password)
        <div class="form-group">
            @Html.LabelFor(model => model.Password, Resources.Account.NewPassword.ToString(), htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                <input type="password" name="Password" class="form-control" value="" />
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, Resources.Account.NewStatus.ToString(), htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="@Resources.Common.Save.ToString()" class="btn btn-success" />
                @Html.ActionLink(Resources.Common.BackToList.ToString(), "Employees", "CompanyEmployee", new { @class = "btn btn-default" })
                <button id="voiceRecognitionButton" class="btn btn-link" type="button">
                    <i class="fas fa-microphone" style="font-size: 1.5em; color: gray;"></i>
                </button>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        var input = document.querySelector("#PhoneNumber");
        var iti = window.intlTelInput(input, {
            initialCountry: "@ViewBag.SelectedCountryCode",
            separateDialCode: true,
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
        });

        iti.setNumber("@Model.ContactNo");

        $('form').submit(function (e) {
            var countryCode = iti.getSelectedCountryData().dialCode;
            var phoneNumber = iti.getNumber();
            if (!iti.isValidNumber()) {
                e.preventDefault();
                alert("Please enter a valid phone number.");
            } else {
                $('#PhoneNumber').val(phoneNumber);
            }
        });
    });
</script>