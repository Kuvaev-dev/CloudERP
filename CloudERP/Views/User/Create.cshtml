@model Domain.Models.User
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using Localization.CloudERP.Modules.Miscellaneous
@using Localization.CloudERP.Modules.Company
@using Localization.CloudERP.Common
@using Localization.CloudERP.Messages
@{
    ViewBag.Title = Company.CreateUser;
}

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>

<script>
    window.Culture = '@HttpContextAccessor.HttpContext?.Session.GetString("Culture")';
</script>
<script src="~/js/CustomScripts/VoiceRecognition.js"></script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h5 class="text-danger">@ViewBag.Message</h5>
        <h5 class="text-danger">@ViewBag.ErrorMessage</h5>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserTypeID, Localization.CloudERP.Modules.User.User.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserTypeID, ViewBag.UserTypeList as IEnumerable<SelectListItem>, Localization.CloudERP.Modules.User.User.UserType, new { @class = "form-control", @id = "UserTypeID" })
                @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, Localization.CloudERP.Modules.User.User.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, Localization.CloudERP.Modules.User.User.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNo, Localization.CloudERP.Modules.User.User.ContactNo, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control w-100", @id = "PhoneNumber" } })
                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, Localization.CloudERP.Modules.User.User.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, Localization.CloudERP.Modules.User.User.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, Miscellaneous.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Common.Create" class="btn btn-default" />
                @if (HttpContextAccessor.HttpContext?.Session.GetInt32("UserTypeID") == 1)
                {
                    Html.ActionLink(Localization.CloudERP.Common.Common.BackToList, "Index", null, new { @class = "btn btn-default" });
                }
                else
                {
                    Html.ActionLink(Localization.CloudERP.Common.Common.BackToList, "SubBranchUser", null, new { @class = "btn btn-default" });
                }
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        var input = document.querySelector("#PhoneNumber");
        var iti = window.intlTelInput(input, {
            initialCountry: "ua",
            separateDialCode: true,
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
        });

        var initialPhone = "@Model.ContactNo";
        if (initialPhone && initialPhone.trim() !== "") {
            iti.setNumber(initialPhone);
        } else {
            iti.setNumber("+380");
        }

        $('form').submit(function (e) {
            var countryCode = iti.getSelectedCountryData().dialCode;
            var phoneNumber = iti.getNumber();
            if (!iti.isValidNumber()) {
                e.preventDefault();
                alert(@Messages.PleaseEnterAValidPhoneNumber);
            } else {
                $('#PhoneNumber').val(phoneNumber);
            }
        });
    });
</script>