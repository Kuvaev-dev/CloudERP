@model Domain.Models.CustomerInvoice

@{
    ViewBag.Title = Resources.Sale.SearchSaleByInvoiceNo.ToString();
}

@using (Html.BeginForm("FindSale", "SaleReturn", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3 class="text-danger">@ViewBag.Message</h3>
        <h3 class="text-danger">@ViewBag.ErrorMessage</h3>

        <div class="form-group">
            <label for="invoiceID" class="control-label col-md-4">@Resources.Sale.EnterSaleInvoice.ToString() №</label>
            <div class="col-md-5">
                <input type="text" class="form-control" id="invoiceID" name="invoiceID" placeholder="Enter Sale Invoice..." required />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Find Sale" class="btn btn-success" />
            </div>
        </div>
    </div>
 }

@if (Model != null && Model.InvoiceNo != null)
{
    using (Html.BeginForm("ReturnConfirm", "SaleReturn", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <input type="hidden" name="CustomerInvoiceID" value="@Model.CustomerInvoiceID" />

        <div class="card mt-4">
            <div class="card-header">
                <h3>@Resources.Sale.Invoice.ToString() №: @Model.InvoiceNo</h3>
                <h3 class="text-danger">@Session["SaleReturnMessage"]</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h4>@Resources.Sale.Company.ToString():</h4>
                        <p>@Model.CompanyName - @Model.BranchName</p>
                        <p>@Resources.Sale.Address.ToString(): @Model.BranchAddress</p>
                        <p>@Resources.Sale.ContactNo.ToString(): @Model.BranchContact</p>
                    </div>
                    <div class="col-md-6">
                        <h4>@Resources.Sale.Customer.ToString():</h4>
                        <p>@Model.Customername</p>
                        <p>@Model.CustomerAddress</p>
                        <p>@Model.CustomerContact</p>
                    </div>
                </div>

                <table class="table table-bordered mt-4">
                    <thead>
                        <tr>
                            <th>@Resources.Sale.Product.ToString()</th>
                            <th>@Resources.Sale.SaleQty.ToString()</th>
                            <th>@Resources.Sale.ReturnQty.ToString()</th>
                            <th>@Resources.Sale.UnitPrice.ToString()</th>
                            <th>@Resources.Sale.ItemCost.ToString()</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < ViewBag.InvoiceDetails.Count; i++)
                        {
                            var item = ViewBag.InvoiceDetails[i];
                            <tr>
                                <td>@item.ProductName</td>
                                <td>@item.Qty</td>
                                <td>
                                    <input type="hidden" name="ProductReturns[@i].ProductID" value="@item.ProductID" />
                                    <input type="number" class="form-control" name="ProductReturns[@i].ReturnQty" value="0" min="0" max="@item.Qty" />
                                </td>
                                <td>@item.SaleUnitPrice.ToString("F2")</td>
                                <td>@item.ItemCost.ToString("F2")</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="form-check mt-3">
                    <input type="checkbox" class="form-check-input" id="IsPayment" name="IsPayment" />
                    <label class="form-check-label" for="IsPayment">@Resources.Sale.IsReturnSalePaymentPaid.ToString()</label>
                </div>

                <button type="submit" class="btn btn-success mt-3">@Resources.Sale.SubmitReturn.ToString()</button>
            </div>
        </div>
    }
}
