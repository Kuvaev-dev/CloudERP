@model Domain.Models.FinancialModels.IncomeStatementModel
@using Localization.CloudERP.Modules.Miscellaneous
@using Localization.CloudERP.Modules.Financial
@using Localization.CloudERP.Modules.Account
@using Localization.CloudERP.Modules.Sale
@{
    ViewBag.Title = Miscellaneous.SubBranchIncomeStatement;
    double totalRevenue = 0;
    double totalExpenses = 0;
}

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

@using (Html.BeginForm("PostSubIncomeStatement", "IncomeStatement", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card card-float">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <label>@Financial.SelectFinancialYear</label>
                        @Html.DropDownList("financialYearID", (SelectList)ViewBag.FinancialYears, Financial.SelectFinancialYear, new { @class = "form-control", required = "required" })
                        <input type="submit" value="@Miscellaneous.RetrieveIncomeStatement" class="btn btn-success form-control">
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@{
    <div class="card card-default col-md-12">
        <div class="card-header">
            <h3 class="text-primary">@Miscellaneous.IncomeStatementStr</h3>
            <h5 class="text-danger">@ViewBag.Message</h5>
            <h5 class="text-danger">@ViewBag.ErrorMessage</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive bootgrid">
                <table class="table table-striped table-bordered table-hover" id="dataTable">
                    <thead>
                        <tr>
                            <th>
                                @Account.HeadAccount
                            </th>
                            <th>
                                @Sale.PaymentAmount
                            </th>
                            <th>
                                @Miscellaneous.Total
                            </th>
                        </tr>
                        @if (Model.IncomeStatementHeads != null && Model != null)
                        {
                            foreach (var accountHead in Model.IncomeStatementHeads)
                            {
                                <tr style="background-color:lightgray;">
                                    <td>@accountHead.Title</td>
                                    <td></td>
                                    <td></td>
                                </tr>

                                foreach (var accounts in accountHead.AccountHead.AccountHeadDetails)
                                {
                                    <tr>
                                        <td>@accounts.AccountSubTitle</td>
                                        @{
                                            double amount = accounts.TotalAmount;
                                            bool isRevenue = accounts.AccountSubTitle.Contains("Revenue");
                                            bool isExpense = accounts.AccountSubTitle.Contains("Expenses");
                                            bool isDebit = accounts.Status == "Debit";
                                            string displayAmount = "";

                                            if (isRevenue)
                                            {
                                                if (isDebit)
                                                {
                                                    displayAmount = $"({amount})";
                                                    amount = -amount;
                                                }
                                                else
                                                {
                                                    displayAmount = amount.ToString();
                                                }
                                                totalRevenue += amount;
                                            }
                                            else if (isExpense)
                                            {
                                                if (isDebit)
                                                {
                                                    displayAmount = amount.ToString();
                                                }
                                                else
                                                {
                                                    displayAmount = $"({amount})";
                                                    amount = -amount;
                                                }
                                                totalExpenses += amount;
                                            }
                                        }
                                        <td>@Html.Raw(displayAmount)</td>
                                        <td></td>
                                    </tr>
                                }

                                if (accountHead.Title.Contains("Revenue"))
                                {
                                    <tr style="background-color:black;color:white;">
                                        <td>@Miscellaneous.TotalRevenue:</td>
                                        <td></td>
                                        <td>@totalRevenue</td>
                                    </tr>
                                }
                                else if (accountHead.Title.Contains("Expenses"))
                                {
                                    <tr style="background-color:black;color:white;">
                                        <td>@Localization.Services.Localization.TotalExpenses:</td>
                                        <td></td>
                                        <td>@totalExpenses</td>
                                    </tr>
                                }

                                <tr><td></td><td></td><td></td></tr>
                            }

                            double netIncome = totalRevenue - totalExpenses;

                            <tr style="background-color:black;color:white;">
                                <td>@Localization.Services.Localization.NetIncome:</td>
                                <td></td>
                                <td>@netIncome</td>
                            </tr>
                        }
                </table>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        $('#dataTable').DataTable({
            layout: {
                topStart: {
                    buttons: [
                        { extend: 'copy', className: 'btn btn-primary' },
                        { extend: 'csv', className: 'btn btn-primary' },
                        { extend: 'excel', className: 'btn btn-primary' },
                        { extend: 'pdf', className: 'btn btn-primary' },
                        { extend: 'print', className: 'btn btn-primary' }
                    ]
                }
            },
            ordering: false
        });
    });
</script>
